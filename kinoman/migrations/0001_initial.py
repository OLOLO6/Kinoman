# Generated by Django 2.2.7 on 2019-11-05 15:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cinema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cinemas_name', models.CharField(default='', max_length=20, verbose_name='Название')),
                ('cinemas_actions', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('cinemas_hall', models.CharField(default='', max_length=20, verbose_name='Вместительность')),
            ],
            options={
                'verbose_name': 'Кинотеатр',
                'verbose_name_plural': 'Кинотеатры',
            },
        ),
        migrations.CreateModel(
            name='CinemasInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cinemas_address', models.CharField(default='', max_length=100, verbose_name='Адрес')),
                ('cinemas_official_website', models.CharField(default='', max_length=100, verbose_name='Оффициальный сайт')),
                ('cinemas_social_media', models.CharField(default='', max_length=100, verbose_name='Социальные сети')),
            ],
            options={
                'verbose_name': 'Информация о кинотеатрах',
                'verbose_name_plural': 'Информация о кинотеатре',
            },
        ),
        migrations.CreateModel(
            name='CinemasSessionsPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_ticket', models.IntegerField(verbose_name='Детский билет')),
                ('adult_ticket', models.IntegerField(verbose_name='Взрослый билет')),
                ('student_ticket', models.IntegerField(verbose_name='Студенческий билет')),
            ],
            options={
                'verbose_name': 'Цена',
                'verbose_name_plural': 'Цены',
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('1', 'Новости'), ('2', 'Статьи'), ('3', 'Рецензии'), ('4', 'Интервью'), ('5', 'События')], default='', max_length=20, verbose_name='Категория')),
                ('title', models.CharField(default='', max_length=100, verbose_name='Название')),
                ('text', models.TextField(help_text='Введите текст', verbose_name='Текст публикации')),
                ('author', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Автор')),
                ('pub_date', models.DateTimeField(default='', verbose_name='Дата публикации')),
                ('reference', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Ссылки')),
                ('owner', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='Owner', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Материалы',
                'verbose_name_plural': 'Материалы',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genres_name', models.CharField(default='', max_length=100, verbose_name='Наименование жанра')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movies_name', models.CharField(default='', max_length=100, unique=True, verbose_name='Название')),
                ('movies_year', models.IntegerField(verbose_name='Год выпуска')),
                ('movies_country', models.CharField(default='', max_length=50, verbose_name='Производство')),
                ('movies_director', models.CharField(default='', max_length=50, verbose_name='Режиссёр')),
                ('movies_actor', models.CharField(default='', max_length=250, verbose_name='Актёры')),
                ('movies_duration', models.TimeField(verbose_name='Продолжительность')),
                ('movies_age_limit', models.CharField(choices=[('1', '6+'), ('2', '12+'), ('3', '14+'), ('4', '16+'), ('5', '18+')], default='', max_length=20, verbose_name='Возрастное ограничение')),
                ('movies_premiere', models.DateField(default='', max_length=50, verbose_name='Премьера')),
                ('movies_story', models.TextField(verbose_name='Сюжет')),
                ('movies_trailer', models.CharField(default='', max_length=50, verbose_name='Трейлер')),
                ('movies_genre', models.ManyToManyField(default='', max_length=50, to='kinoman.Genre', verbose_name='Жанр')),
                ('movies_other', models.ManyToManyField(blank=True, to='kinoman.Content', verbose_name='Другое')),
            ],
            options={
                'verbose_name': 'Фильм',
                'verbose_name_plural': 'Фильмы',
            },
        ),
        migrations.CreateModel(
            name='MoviesComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_publication', models.CharField(default='', help_text='Введите заголовок', max_length=100, verbose_name='Заголовок')),
                ('text_of_publication', models.TextField(help_text='Введите текст', verbose_name='Текст публикации')),
                ('date_of_publication', models.DateTimeField(verbose_name='Дата публикации')),
                ('movie', models.ForeignKey(help_text='Выберите фильм', on_delete=django.db.models.deletion.CASCADE, to='kinoman.Movie', verbose_name='Название фильма')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Commen_owner', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Отзыв к фильму',
                'verbose_name_plural': 'Отзывы к фильму',
            },
        ),
        migrations.CreateModel(
            name='Ikinoman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archive_name', models.CharField(default='', help_text='Введите название подборки', max_length=100, verbose_name='Название подборки')),
                ('archive', models.ManyToManyField(blank=True, to='kinoman.Movie', verbose_name='Мои рекомендации')),
                ('owner', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='kino_owner', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Киномания',
                'verbose_name_plural': 'Киномании',
            },
        ),
        migrations.CreateModel(
            name='CinemasSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movies_date', models.DateField(verbose_name='Дата')),
                ('movies_time', models.TimeField(verbose_name='Время')),
                ('movies_hall', models.CharField(default='', max_length=20, verbose_name='Зал')),
                ('movies_format', models.CharField(default='', max_length=20, verbose_name='Формат')),
                ('movies_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kinoman.Movie', verbose_name='Название фильма')),
                ('movies_price', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='kinoman.CinemasSessionsPrice', verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Сеанс',
                'verbose_name_plural': 'Сеансы',
            },
        ),
        migrations.CreateModel(
            name='CinemasComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_publication', models.CharField(default='', help_text='Введите заголовок', max_length=100, verbose_name='Заголовок')),
                ('text_of_publication', models.TextField(help_text='Введите текст', verbose_name='Текст публикации')),
                ('date_of_publication', models.DateTimeField(verbose_name='Дата публикации')),
                ('cinema', models.ForeignKey(help_text='Выберите кинотеатр', on_delete=django.db.models.deletion.CASCADE, to='kinoman.Cinema', verbose_name='Название кинотеатра')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_comment', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Отзыв о кинотатре',
                'verbose_name_plural': 'Отзывы о кинотеатре',
            },
        ),
        migrations.AddField(
            model_name='cinema',
            name='cinemas_information',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='kinoman.CinemasInformation', verbose_name='О Кинотеатре'),
        ),
        migrations.AddField(
            model_name='cinema',
            name='cinemas_sessions',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='kinoman.CinemasSession', verbose_name='Сеансы'),
        ),
        migrations.AddField(
            model_name='cinema',
            name='owner',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='cinema_owner', to=settings.AUTH_USER_MODEL, verbose_name='Создатель'),
        ),
    ]
